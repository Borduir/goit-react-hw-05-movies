{"version":3,"file":"static/js/115.644eb8f9.chunk.js","mappings":"oOAGe,SAASA,IAAU,IAAD,EACzBC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,MAEAC,EAAAA,EAAAA,YAAU,WACJL,GAASA,EAAMM,OAAS,GAC1BC,MAAM,sIAAD,OACmIP,IAErIQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GACJL,EAAkBK,EAASE,QAC5B,GAGN,GAAE,IAkBH,OACE,kBAAMC,SAZS,SAAAC,GACfA,EAAMC,iBACNP,MAAM,sIAAD,OACmIP,IAErIQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GACJL,EAAkBK,EAASE,QAC5B,GACJ,EAGC,WACE,kBAAOI,MAAOf,EAAOgB,SAlBJ,SAAAH,GACnB,IAAQE,EAAUF,EAAMI,cAAhBF,MACRhB,EAA0B,KAAVgB,EAAe,CAAEf,MAAOe,GAAU,CAAC,EACpD,KAgBG,mBAAQG,KAAK,SAAb,oBACCf,IAAmB,KAClB,wBACGA,EAAegB,KAAI,SAAAC,GAClB,OACE,yBACE,SAAC,KAAD,CAASC,GAAE,UAAKD,EAAcE,IAAMC,MAAO,CAAEC,KAAM7B,GAAnD,SACGyB,EAAcK,MACXL,EAAcK,MACdL,EAAcM,QAJbN,EAAcE,GAQ1B,QAKV,C","sources":["components/Movies/Movies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [requiredMovies, setRequiredMovies] = useState([]);\n\n  useEffect(() => {\n    if (query && query.length > 0) {\n      fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=54ae14b77c512b5ac8b687e8ee5bab33&language=en-US&page=1&include_adult=false&query=${query}`\n      )\n        .then(response => response.json())\n        .then(response => {\n          setRequiredMovies(response.results);\n        });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const handleChange = event => {\n    const { value } = event.currentTarget;\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=54ae14b77c512b5ac8b687e8ee5bab33&language=en-US&page=1&include_adult=false&query=${query}`\n    )\n      .then(response => response.json())\n      .then(response => {\n        setRequiredMovies(response.results);\n      });\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input value={query} onChange={handleChange}></input>\n      <button type=\"submit\">Search</button>\n      {requiredMovies !== [] && (\n        <ul>\n          {requiredMovies.map(requiredMovie => {\n            return (\n              <li key={requiredMovie.id}>\n                <NavLink to={`${requiredMovie.id}`} state={{ from: location }}>\n                  {requiredMovie.title\n                    ? requiredMovie.title\n                    : requiredMovie.name}\n                </NavLink>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </form>\n  );\n}\n"],"names":["Movies","location","useLocation","useSearchParams","searchParams","setSearchParams","query","get","useState","requiredMovies","setRequiredMovies","useEffect","length","fetch","then","response","json","results","onSubmit","event","preventDefault","value","onChange","currentTarget","type","map","requiredMovie","to","id","state","from","title","name"],"sourceRoot":""}